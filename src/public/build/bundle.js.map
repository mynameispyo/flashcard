{"version":3,"file":"bundle.js","sources":["../../../node_modules/svelte/internal/index.mjs","../../ui/Components/TopMenu.svelte","../../ui/Components/DeleteMordal.svelte","../../ui/Edit.svelte","../../ui/Auth.svelte","../../ui/CardSets.svelte","../../ui/Study.svelte","../../ui/App.svelte","../../ui/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.32.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\r\n    let homePath = \"/\";\r\n    if(sessionStorage.getItem(\"token\")===null){\r\n        homePath = \"/home\";\r\n    }\r\n\r\n    let togglebutton = true;\r\n</script>\r\n\r\n<div class=\"bg-blue-500 text-white md:flex md:justify-between md:items-center\">\r\n\r\n    <div class=\"flex items-center justify-between p-4\">\r\n        <a href={homePath}>Flashcard.Page</a>\r\n\r\n        <button class=\"md:hidden\" on:click={() => togglebutton = !togglebutton}>\r\n            <svg class=\"h-6 w-6 fill-current\" viewBox=\"0 0 24 24\">\r\n                <path fill-rule=\"evenodd\"\r\n                      d=\"M4 5h16a1 1 0 0 1 0 2H4a1 1 0 1 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2z\"/>\r\n            </svg>\r\n        </button>\r\n    </div>\r\n\r\n\r\n    <ul class=\"flex flex-col bg-gray-700 px-4 py-2 md:flex md:flex-row md:bg-transparent {togglebutton ? 'hidden' : ''}\">\r\n        <a class=\"md:pl-2 md:pr-4\" href=\"/cardsets\">Study Sets</a>\r\n        <a class=\"md:px-4\" href=\"/auth\">Account</a>\r\n    </ul>\r\n    \r\n</div>","<script>\r\n    import { createEventDispatcher } from 'svelte';\r\n    const dispatch = createEventDispatcher();\r\n\r\n    function cancelSituation() {\r\n        dispatch('accept', {\r\n            result: false,\r\n        });\r\n    }\r\n\r\n    function acceptSituation() {\r\n        dispatch('accept', {\r\n            result: true,\r\n        });\r\n    }\r\n</script>\r\n<div class=\"fixed z-10 inset-0 overflow-y-auto\">\r\n    <div class=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n      <div class=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\r\n        <div class=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\r\n      </div>\r\n    <span class=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\r\n      <div class=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\r\n        <div class=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n          <div class=\"sm:flex sm:items-start\">\r\n            <div class=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\r\n              <!-- Heroicon name: exclamation -->\r\n              <svg class=\"h-6 w-6 text-red-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\r\n              </svg>\r\n            </div>\r\n            <div class=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\r\n              <h3 class=\"text-lg leading-6 font-medium text-gray-900\" id=\"modal-headline\">\r\n                Delete Word\r\n              </h3>\r\n              <div class=\"mt-2\">\r\n                <p class=\"text-sm text-gray-500\">\r\n                  Are you sure you want to delete the word? All of your data will be permanently removed. This action cannot be undone.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n          <button type=\"button\" on:click={acceptSituation} class=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm\">\r\n            Delete\r\n          </button>\r\n          <button type=\"button\" on:click={cancelSituation} class=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>","<script>\r\nimport TopMenu from \"./Components/TopMenu.svelte\";\r\nimport DeleteMordal from \"./Components/DeleteMordal.svelte\";\r\nimport { onMount } from 'svelte';\r\nlet _GET = {};\r\n\r\n\r\nlet args = window.location.search.substr(1).split(\"&\");\r\nfor (var i=0; i<args.length; ++i) {\r\n    var tmp = args[i].split(/=/);\r\n    if (tmp[0] != \"\") {\r\n        _GET[decodeURIComponent(tmp[0])] = decodeURIComponent(tmp.slice(1).join(\"\").replace(\"+\", \" \"));\r\n    }\r\n}\r\n\r\n\r\nfunction urlencoded(fetchData){\r\n    let formBody = [];\r\n    for (let k in fetchData) {\r\n        formBody.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(fetchData[k]));\r\n    }\r\n    formBody = formBody.join(\"&\");\r\n    return formBody;\r\n}\r\n\r\n\r\nlet cardSets = {};\r\nlet saveResult = {};\r\nlet showMoral = false;\r\nlet showMoral2 = false;\r\nlet selectDelete;\r\n\r\nonMount(async () => {\r\n    let formData\r\n    if (sessionStorage.getItem(\"token\") !== null){\r\n        formData = await urlencoded({\"token\":sessionStorage.getItem(\"token\"), 'id':_GET.id});\r\n    }else{\r\n        window.location.href = \"/auth\";\r\n    }\r\n    const res = await fetch(\"/api/loadset\", {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        cache: 'no-cache', \r\n        credentials: 'same-origin', \r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer', \r\n        body: formData// body data type must match \"Content-Type\" header\r\n    });\r\n    cardSets = await res.json();\r\n    if (cardSets.error !== \"nil\" && cardSets.error === \"hide\"){\r\n        sessionStorage.removeItem(\"token\");\r\n        window.location.href = \"/auth\";\r\n    }\r\n});\r\n\r\n\r\nasync function saveSet() {\r\n    let formData\r\n    if (sessionStorage.getItem(\"token\") !== null){\r\n        delete cardSets.sets._id\r\n        formData = await urlencoded({\"token\":sessionStorage.getItem(\"token\"), 'id':_GET.id, 'newsets':JSON.stringify(cardSets.sets)});\r\n    }else{\r\n        window.location.href = \"/auth\";\r\n    }\r\n    const res = await fetch(\"/api/saveset\", {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        cache: 'no-cache', \r\n        credentials: 'same-origin', \r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer', \r\n        body: formData// body data type must match \"Content-Type\" header\r\n    });\r\n    saveResult = await res.json();\r\n    if (saveResult.error !== \"nil\" && saveResult.error === \"hide\"){\r\n        sessionStorage.removeItem(\"token\");\r\n        window.location.href = \"/auth\";\r\n    }\r\n}\r\n\r\nasync function deleteSet() {\r\n    let formData\r\n    if (sessionStorage.getItem(\"token\") !== null){\r\n        formData = await urlencoded({\"token\":sessionStorage.getItem(\"token\"), 'id':_GET.id});\r\n    }else{\r\n        window.location.href = \"/auth\";\r\n    }\r\n    const res = await fetch(\"/api/deleteset\", {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        cache: 'no-cache', \r\n        credentials: 'same-origin', \r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer', \r\n        body: formData// body data type must match \"Content-Type\" header\r\n    });\r\n    saveResult = await res.json();\r\n    if (saveResult.error !== \"nil\" && saveResult.error === \"hide\"){\r\n        sessionStorage.removeItem(\"token\");\r\n        window.location.href = \"/auth\";\r\n    }\r\n}\r\n\r\nfunction poppop(arr, index){\r\n    let out = []\r\n    for(let i=0;i<arr.length;i++){\r\n        if(i !== index){\r\n            out.push(arr[i]);\r\n        }\r\n    }\r\n    return out;\r\n}\r\nfunction deleteWord(e){\r\n    if(e.detail.result ){\r\n        cardSets.sets.cards = poppop(cardSets.sets.cards, selectDelete);\r\n        console.log(selectDelete);\r\n        console.log(cardSets.sets.cards);\r\n    }\r\n    showMoral = false;\r\n}\r\n\r\nfunction deleteSetMordal(e){\r\n    if(e.detail.result ){\r\n        deleteSet();\r\n        window.location.href = \"/cardsets\";\r\n    }\r\n    showMoral2 = false;\r\n}\r\n\r\nfunction addWord(){\r\n    cardSets.sets.cards[cardSets.sets.cards.length] = {\"term\":\"\",\"def\":\"\",\"image\":\"nil\", \"highlight\":false};\r\n    console.log(cardSets.sets.cards);\r\n}\r\n</script>\r\n\r\n<div>\r\n    <TopMenu />\r\n    <div class=\"bg-blue-100\">\r\n        {#if cardSets.error === \"nil\"}\r\n            <p>Title:</p><input bind:value={cardSets.sets.title}>\r\n            <p>Description:</p><input bind:value={cardSets.sets.desc}>\r\n            {#each cardSets.sets.cards as card,i}\r\n                <div>\r\n                    <input bind:value={cardSets.sets.cards[i].term}>\r\n                    <input bind:value={cardSets.sets.cards[i].def}>\r\n                    <button on:click={()=>{showMoral = true;selectDelete=i}}>Delete</button>\r\n                </div>\r\n            {/each}\r\n        {/if}\r\n        <button on:click={saveSet}>Save</button>\r\n        <button on:click={addWord}>Add</button>\r\n\r\n        <button on:click={()=>showMoral2= true} class=\"p-3\">Delete this set</button>\r\n        {#if saveResult.error === \"nil\"}\r\n            <p>{saveResult.message}</p>\r\n        {/if}\r\n    </div>\r\n    {#if showMoral}\r\n    <DeleteMordal on:accept={deleteWord}/>\r\n    {/if}\r\n    {#if showMoral2}\r\n    <DeleteMordal on:accept={deleteSetMordal}/>\r\n    {/if}\r\n</div>\r\n\r\n","<script >\nimport TopMenu from \"./Components/TopMenu.svelte\";\n\nlet user;\nlet pass;\nlet result;\n\nlet show = false;\nfunction urlencoded(fetchData){\n    let formBody = [];\n    for (let k in fetchData) {\n        formBody.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(fetchData[k]));\n    }\n    formBody = formBody.join(\"&\");\n    return formBody;\n}\n\n\nasync function login(){\n    let fetchData = {\n        user:user,\n        pass:pass,\n    }\n\n    let formBody = await urlencoded(fetchData);\n    const res = await fetch(\"/api/login\", {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n        // 'Content-Type': 'application/json'\n        'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        redirect: 'follow', // manual, *follow, error\n        referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n        body:formBody // body data type must match \"Content-Type\" header\n    });\n    const data = await res.json();\n    sessionStorage.setItem('token',data.token);\n\n    result = data;\n    show = true;\n    \n    if(data.error === \"nil\"){\n        window.location.href = \"/cardsets\";\n    }\n    return data;\n}\n\nasync function signup(){\n    let fetchData = {\n        user:user,\n        pass:pass,\n    }\n\n    let formBody = await urlencoded(fetchData);\n    const res = await fetch(\"/api/signup\", {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n        // 'Content-Type': 'application/json'\n        'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        redirect: 'follow', // manual, *follow, error\n        referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n        body:formBody // body data type must match \"Content-Type\" header\n    });\n    const data = await res.json();\n    sessionStorage.setItem('token',data.token); \n\n    result = data;\n    show = true;\n\n    if(data.error === \"nil\"){\n        window.location.href = \"/home\";\n    }\n    return data;\n}\n\nfunction logOut(){\n    sessionStorage.removeItem(\"token\");\n    window.location.reload(false);\n}\n</script>\n<TopMenu />\n<div class=\"bg-gray-100 \">\n    {#if sessionStorage.getItem(\"token\")===null}\n        <input bind:value={user}>\n        <input bind:value={pass}>\n        <button on:click={login}>Login</button>\n        <button on:click={signup}>SignUp</button>\n        <p>\n            {#if show  }\n                {result.message}\n            {/if}\n        </p>\n    {:else}\n        <button on:click={logOut}>LogOut</button>\n    {/if}\n</div> ","<script>\r\nimport TopMenu from \"./Components/TopMenu.svelte\"\r\n\r\nimport { onMount } from 'svelte';\r\n\r\nfunction urlencoded(fetchData){\r\n    let formBody = [];\r\n    for (let k in fetchData) {\r\n        formBody.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(fetchData[k]));\r\n    }\r\n    formBody = formBody.join(\"&\");\r\n    return formBody;\r\n}\r\n\r\n\r\n\r\nlet cardSets = [];\r\n\r\n\r\nonMount(async () => {\r\n    let formData\r\n    if (sessionStorage.getItem(\"token\") !== null){\r\n        formData = await urlencoded({\"token\":sessionStorage.getItem(\"token\")});\r\n    }else{\r\n        window.location.href = \"/auth\";\r\n    }\r\n    const res = await fetch(\"/api/cardsets\", {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        cache: 'no-cache', \r\n        credentials: 'same-origin', \r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer', \r\n        body: formData// body data type must match \"Content-Type\" header\r\n    });\r\n    cardSets = await res.json();\r\n    if (cardSets.error !== \"nil\" && cardSets.error === \"hide\"){\r\n        sessionStorage.removeItem(\"token\");\r\n        window.location.href = \"/auth\";\r\n    }\r\n});\r\n\r\n\r\nasync function createNewSet(){\r\n    let formData\r\n    if (sessionStorage.getItem(\"token\") !== null){\r\n        formData = await urlencoded({\"token\":sessionStorage.getItem(\"token\")});\r\n    }else{\r\n        window.location.href = \"/auth\";\r\n    }\r\n    const res = await fetch(\"/api/newset\", {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        cache: 'no-cache', \r\n        credentials: 'same-origin', \r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer', \r\n        body: formData// body data type must match \"Content-Type\" header\r\n    });\r\n    cardSets = await res.json();\r\n    if (cardSets.error !== \"nil\" && cardSets.error === \"hide\"){\r\n        sessionStorage.removeItem(\"token\");\r\n        window.location.href = \"/auth\";\r\n    }\r\n    window.location.reload(false);\r\n}\r\n\r\n</script>\r\n\r\n\r\n<div class=\"h-screen\">\r\n    <TopMenu />\r\n    <div class=\"grid grid-cols-3\">\r\n        <div class=\" h-full\">\r\n            <button class=\"bg-blue-400 text-white rounded-sm p-3\" on:click={createNewSet}>New</button>\r\n        </div>\r\n        <div class=\"col-span-2 h-full\">\r\n            <div class=\"w-full p-5\">\r\n                {#if cardSets !== []}\r\n                    {#if cardSets.error === \"nil\"}\r\n                        {#each cardSets.sets as sets}\r\n                            <div class=\"shadow-lg grid grid-cols-3 w-full bg-gray-500 mb-5\">\r\n                                <div class=\" col-span-2\">\r\n                                    <h1 class=\"text-3xl text-center\">{sets.title}</h1>\r\n                                    <p class=\"text-xl text-center\">{sets.desc}</p>\r\n                                </div>\r\n                                <div class=\"grid grid-cols-2\">\r\n                                    <a class=\"text-3xl\" href={\"./study?id=\"+encodeURIComponent(sets.id)}>Study</a>\r\n                                    <a class=\"text-3xl\" href={\"./edit?id=\"+encodeURIComponent(sets.id)}>Edit</a>\r\n                                </div>\r\n                            </div>\r\n                        {/each}\r\n                    {:else}\r\n                        <p class=\"text-red-500\">{cardSets.error}</p>\r\n                    {/if}\r\n                {:else}\r\n                        <p>...loading</p>\r\n                {/if}\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>","<script>\r\nimport TopMenu from \"./Components/TopMenu.svelte\";\r\nimport { onMount } from 'svelte';\r\n\r\nlet _GET = {};\r\n\r\n\r\nlet args = window.location.search.substr(1).split(\"&\");\r\nfor (var i=0; i<args.length; ++i) {\r\n    var tmp = args[i].split(/=/);\r\n    if (tmp[0] != \"\") {\r\n        _GET[decodeURIComponent(tmp[0])] = decodeURIComponent(tmp.slice(1).join(\"\").replace(\"+\", \" \"));\r\n    }\r\n}\r\n\r\nlet cardSets;\r\nlet position = 0;\r\n\r\nlet flipCard = false;\r\nlet loading = false;\r\n\r\nlet cards;\r\nfunction urlencoded(fetchData){\r\n    let formBody = [];\r\n    for (let k in fetchData) {\r\n        formBody.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(fetchData[k]));\r\n    }\r\n    formBody = formBody.join(\"&\");\r\n    return formBody;\r\n}\r\n\r\n\r\n\r\nonMount(async () => {\r\n    let formData;\r\n    if (sessionStorage.getItem(\"token\") !== null){\r\n        formData = await urlencoded({\"token\":sessionStorage.getItem(\"token\"), 'id':_GET.id});\r\n    }else{\r\n        window.location.href = \"/auth\";\r\n    }\r\n    const res = await fetch(\"/api/loadset\", {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        cache: 'no-cache', \r\n        credentials: 'same-origin', \r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer', \r\n        body: formData// body data type must match \"Content-Type\" header\r\n    });\r\n    cardSets = await res.json();\r\n    if (cardSets.error !== \"nil\" && cardSets.error === \"hide\"){\r\n        sessionStorage.removeItem(\"token\");\r\n        window.location.href = \"/auth\";\r\n    } \r\n    loading = true;\r\n    cards = cardSets.sets.cards;\r\n    console.log(cardSets);\r\n});\r\n\r\nconst keyClick = (event)=>{\r\n    if(event.keyCode === 32) {\r\n        event.preventDefault();\r\n        flipCard = !flipCard;\r\n    }if(event.keyCode === 39) {\r\n        event.preventDefault();\r\n        if(position<cards.length-1)position++\r\n    }if(event.keyCode === 37) {\r\n        event.preventDefault();\r\n        if(position>0) position--\r\n    }\r\n}\r\n</script>\r\n\r\n<svelte:body on:keydown={keyClick} />\r\n\r\n<div>\r\n    <TopMenu />\r\n    {#if loading}\r\n    <div class=\" max-w-sm mx-auto\">\r\n        <div class=\"w-96 h-96 shadow-2xl cursor-default flex items-center justify-center\" on:click={()=>flipCard = !flipCard}>\r\n            {#if !flipCard}\r\n            <h1 class=\"text-5xl text-center\">{cards[position].term}</h1>\r\n            {:else}\r\n            <h1 class=\"text-5xl text-center\">{cards[position].def}</h1>\r\n            {/if}\r\n        </div>\r\n        <div class=\"flex\">\r\n            <button class=\"text-5xl flex-none w-12 h-12 focus:outline-none\" on:click={()=>{if(position>0) position--}}>&lt;</button>\r\n            <progress class=\"flex-grow my-auto\" value={(position+1)/cards.length}></progress>\r\n            <button class=\"text-5xl flex-none w-12 h-12 focus:outline-none\" on:click={()=>{if(position<cards.length-1)position++}}>&gt;</button>\r\n        </div>\r\n    </div>\r\n    {/if}\r\n</div>","<script>\n    import Main from \"./Main.svelte\";\n    import PageError from \"./PageError.svelte\";\n    import Edit from \"./Edit.svelte\";\n    import Auth from \"./Auth.svelte\";\n    import CardSets from \"./CardSets.svelte\";\n    import Study from \"./Study.svelte\";\n\tconst path = window.location.pathname;\n</script>\n\n{#if path == \"/\" }\n<Main />\n{:else if path == \"/edit\"}\n<Edit />\n{:else if path == \"/auth\"}\n<Auth />\n{:else if path == \"/cardsets\"}\n<CardSets />\n{:else if path == \"/study\"}\n<Study />\n{:else}\n<PageError />\n{/if}\n\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","createEventDispatcher","type","detail","callbacks","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","$$props","obj","$$set","keys","homePath","sessionStorage","getItem","togglebutton","dispatch","result","sets","cards","title","desc","term","def","message","error","urlencoded","fetchData","formBody","k","encodeURIComponent","join","_GET","args","window","location","search","substr","split","tmp","decodeURIComponent","replace","selectDelete","cardSets","saveResult","showMoral","showMoral2","formData","token","id","href","res","fetch","method","mode","cache","credentials","headers","Content-Type","redirect","referrerPolicy","body","json","removeItem","_id","newsets","JSON","stringify","arr","out","poppop","console","log","deleteSet","image","highlight","logOut","reload","user","pass","show","setItem","position","flipCard","loading","keyCode","preventDefault","pathname"],"mappings":"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"}